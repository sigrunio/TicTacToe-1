/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'root' at '10/30/15 10:20 PM' with Gradle 2.8
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.8/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

mainClassName = "main.java.is.task.TicTacToe.TicTacToe"


repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

sourceSets {
    selenium
    seleniumXvfb
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'com.sparkjava:spark-core:2.3'


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'

    seleniumCompile 'junit:junit:4.11'
    seleniumCompile 'org.seleniumhq.selenium:selenium-java:2.48.2'

    seleniumXvfbCompile 'junit:junit:4.11'
    seleniumXvfbCompile 'org.seleniumhq.selenium:selenium-java:2.48.2'
}

jar {
    manifest {
        attributes("Main-Class": "main.java.is.task.TicTacToe.TicTacToeWeb")
    }
}

task stage { dependsOn installDist }

task selenium(type: Test, dependsOn: installDist) {
    testClassesDir = sourceSets.selenium.output.classesDir
    classpath = sourceSets.selenium.runtimeClasspath

    ant.condition(property: "os", value: "windows") { os(family: "Windows") }
    ant.condition(property: "os", value: "unix") { os(family: "unix") }

    doFirst {
        switch(ant.properties.os) {
            case 'unix':
                'build/install/TicTacToe/bin/TicTacToe &'.execute()
                break
            case 'windows':
                'build\\install\\TicTacToe\\bin\\TicTacToe.bat'.execute()
                break
        }
    }
}

task seleniumXvfb(type: Test, dependsOn: installDist) {
    testClassesDir = sourceSets.selenium.output.classesDir
    classpath = sourceSets.selenium.runtimeClasspath

    environment "DISPLAY", ":99"

    doFirst {
        'bin/xvfb start'.execute()
        'build/install/TicTacToe/bin/TicTacToe &'.execute()
    }

    doLast {
        'sh -e /etc/init.d/xvfb stop'.execute()
    }
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}
